#!/usr/bin/env bash
#
# deb-upload-check COMMAND
#
# Executes COMMAND only if the version number of the file in
# ./artifacts/Packages is greater than that of the corresponding
# package in the remote repository, or if the package does not exist
# in the remote repository. Use with “dput” in Gitlab pipelines, as in
#
#   script:
#     ...
#     - deb-upload-check dput ./artifacts/*.changes
#     ...
#
# Use "-r REPO-URL", "-d DIST" (usually "buster"), "-c COMPONENT"
# (usually "sva3"), and "-a ARCHITECTURE" (usually "amd64") as
# required. The "*.changes" file is assumed to be in "./artifacts";
# use "-A ARTIFACTS-DIR" to override.
#
# 2018-03-27 Anselm Lingnau <anselm.lingnau@keyidentity.com>
set -ex

OPTIND=1

repo=http://unknown
dist=buster
component=linotp
arch=amd64
artifacts=./artifacts

while getopts "r:d:c:a:A:" opt; do
    case "$opt" in
	r) repo=$OPTARG
	   ;;
	d) dist=$OPTARG
	   ;;
	c) component=$OPTARG
	   ;;
	a) arch=$OPTARG
	   ;;
	A) artifacts=$OPTARG
	   ;;
    esac
done

shift $((OPTIND-1))

[ "$1" = "--" ] && shift

fn=$(cd "$artifacts"; ls *.changes)
if [ -z "$fn" ]; then
    echo >&2 "$0: no *.changes file found in $dir, aborting"
    exit 2
fi

local_version="${fn#*_}"
local_version="${local_version%_*}"
remote_version=$(curl --silent "$repo/dists/$dist/$component/binary-$arch/Packages" \
		     | sed -ne '/Package: '${fn%%_*}'/,/^$/s/^Version: //p')

if dpkg --compare-versions "$local_version" gt "$remote_version"; then
    if [ $# \> 0 ]; then
	exec $@
    fi
    exit 0
fi
echo >&2 "$0: local $local_version <= remote $remote_version, not uploading"
exit 1
