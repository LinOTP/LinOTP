#!/bin/bash
#
# LinOTP - the Open Source solution for multi-factor authentication
#
# Coypright Â© 2020- arxes-tolina GmbH
#
# Shell script based installation / upgrade / configuration tests
#

show_help() {
    echo
    echo "$0 TEST"
    echo
    echo " install2       Purge, install v2, selenium test"
    echo " install3       Purge, install v3"
    echo " upgrade2to3    Purge, install v2, upgrade to v3"
    echo " install3psql   Purge, install using postgres database"
    echo
    echo " upgrade3from2  Upgrade installed v2 to v3"
    echo " remove         Remove installed package"
    echo
    echo " selenium_check Selenium test currently installed package"
    echo " mysql_password Check v3 install with password containing spaces"
    echo
    echo " alltests       Run all available tests"
    echo " help           Show this help message"
    echo
}

# Exit on errors, unset variables or pipeline errors
set -euo pipefail


# Load environment from .env file
toolsdir="$(cd $(dirname $0); pwd)"
envfile="$toolsdir/.env"
if [ -f "$envfile" ]; then
  source "$envfile"
else
  echo "Using default settings. To customise for your environment, copy"
  echo "the file env.template to .env and edit for your local configuration"
fi

####
# Default settings that can be overriden from .env file or environment
####
# Sources directory
: "${linotp_project:="$(realpath "$toolsdir"/../../../../..)"}"

# config file for integration tests
: "${integration_ini="$(realpath ../integration/server_local.ini)"}"

# Command to gain root
: "${sudo="sudo --preserve-env=DEBIAN_FRONTEND,DEBIAN_PRIORITY"}"

# Pytest for running tests
: "${pytest="pytest"}"
####

# LinOTP 2 package to download and install
linotp2_deb_url="http://www.linotp.org/apt/debian/dists/buster/linotp/all/linotp_2.11.2-1~bpo10+1_all.deb"

linotpsrc=$linotp_project/linotpd/src

# Use line based debconf frontend if any missing questions
# are encountered
export DEBIAN_FRONTEND=readline

# This is a flag to indicate if any non fatal errors were
# detected during the process
have_errors=

error() {
    # Show error message but do not exit immediately
    echo "ERROR: $@"
    have_errors=1
}

fatal() {
    # Show error message and exit
    echo "FATAL: $@"
    exit 1
}

cfgfail() {
    # Error in configuration file
    echo "--- linotp.cfg --"
    $sudo cat /etc/linotp/linotp.cfg
    echo "-----------------"
    echo
    echo "CONFIGURATION ERROR: $@"
    exit 1
}

logtest() {
    echo
    echo "======================"
    echo "TEST: $@"
    echo "======================"
}

# Purge existing linotp package
# WARNING: This will remove any existing
# linotp package
purge() {
    if [ "$LINOTP_PURGE_ALLOW" != "yes" ]; then
        echo "
A complete package purge is required but is not allowed.

If you wish to proceed, set the following variable:
    LINOTP_PURGE_ALLOW=yes

WARNING: this will DELETE any existing linotp configuration!
"
        fatal "Confirmation of purge required"
    fi

    if [ -f /var/lib/dpkg/info/linotp.list ]; then

        # Preseed database removal on linotp3
        if dpkg --compare-versions `dpkg-query -Wf '${Version}' linotp` ge "2.80"; then
            echo "Preseeding dbconfig-common removal"
            echo "linotp linotp/dbconfig-remove boolean true" | $sudo debconf-set-selections || true
            echo "linotp linotp/purge boolean true" | $sudo debconf-set-selections || true
        fi
        echo "Purging linotp"
        sudo apt --yes purge linotp

        # Drop mysql users if they exist
        $sudo mysql --defaults-file=/etc/mysql/debian.cnf -e "DROP USER IF EXISTS linotp, linotp2;" || true
    fi

    # Check if all files are removed
    if [ -d /usr/lib/python3/dist-packages/linotp ];then
        error "dist-packages/linotp not removed"
        find /usr/lib/python3/dist-packages/linotp -ls
        sudo rm -rf /usr/lib/python3/dist-packages/linotp
    fi

}

preseed_2() {
    echo "Preseeding linotp2 questions"
    (
        echo "linotp linotp/apache/activate boolean true"
        echo "linotp linotp/apache/admin_password password admin"
        echo "linotp linotp/apache/ssl_create boolean false"

        echo "linotp linotp/mysql/ask_rootpw password $mysql_root_password"
        echo "linotp linotp/tokendb/randompw boolean true"
        echo "linotp linotp/mysql/ask_createdb boolean true"
        echo "linotp linotp/mysql/ask_createtables boolean true"
    ) | $sudo debconf-set-selections

}

preseed_3() {
    echo "Preseeding linotp3 questions for MariaDB database"
    (
        echo "linotp linotp/apache/activate boolean true"
        echo "linotp linotp/apache/admin_password password admin"
        echo "linotp linotp/apache/ssl_create boolean false"
        echo "linotp linotp/dbconfig-install boolean true"
        echo "linotp linotp/dbconfig-upgrade boolean true"
        echo "linotp linotp/database-type    select  mysql"
        echo "linotp linotp/mysql/app-pass password DataB123!"
    ) | $sudo debconf-set-selections
}

preseed_3_for_upgrade() {
    echo "Preseeding linotp3 questions for LinOTP 3 upgrade"
    (
        echo "linotp linotp/dbconfig-upgrade boolean true"
    ) | $sudo debconf-set-selections
}

preseed_3_postgres() {
    echo "Preseeding linotp3 questions for Postgres database"
    preseed_3
    (
        echo "linotp linotp/database-type    select  pgsql"
        echo "linotp  linotp/remote/host      select  localhost"
        echo "linotp linotp/pgsql/app-pass password DataBPG123!"
    ) | $sudo debconf-set-selections

}

install_2() {
    url="$1"
    linotp2_deb="$toolsdir"/"$(echo $url | grep -o "/[^/]*$")"
    if [ ! -f $linotp2_deb ]; then
        echo "Downloading linotp deb to $toolsdir"
        cd "$toolsdir"
        wget "$url"
    fi

    echo "Installing linotp 2 package"
    DEBIAN_PRIORITY=critical $sudo apt --yes install "$linotp2_deb" libapache2-mod-wsgi
}

install_3() {
    echo "Installing latest linotp 3 package"
    $sudo apt --yes install "$linotp3_deb" libapache2-mod-wsgi-py3
}

check_2() {
    # Basic test to check we have a working linotp 2 install
    check_service
}

check_3() {
    # Tests to see if all is okay and there are no known configuration problems
    if $sudo grep -q "unconfigured" /etc/linotp/linotp.cfg; then
        cfgfail "SQLalchemy is not configured"
    fi
    # Mysql - check encoding
    if $sudo debconf-get-selections|grep -q "linotp\slinotp/database-type\sselect\smysql"; then
        if ! $sudo grep -q "charset=utf8" /etc/linotp/linotp.cfg; then
            cfgfail "Missing charset in linotp.cfg for mysql database"
        fi
    fi
    check_service
}
# sudo apt purge --yes linotp; sudo mysql --defaults-file=/etc/mysql/debian.cnf -e "DROP USER linotp;"; sudo debconf-set-selections config/linotp-with-mysql-preseed.txt && sudo debi

check_service() {
    # Check we can retrieve manage interface. This gives us an early indication if the install
    # did not work
    echo "Retrieving manage interface page"
    if ! wget -nv --user=admin --password=admin -O /dev/null --no-check-certificate https://localhost/manage; then
        echo "Apache error.log:"
        $sudo tail -n 10 /var/log/apache2/error.log
        fatal "Service is not working"
    fi
}

selenium_check() {
    cd $linotpsrc/linotp/tests/integration
    if [ ! -f "$integration_ini" ]; then
        fatal "Could not find integration settings file: $(pwd)/$integration_ini"
    fi
    params="--tc-file=$integration_ini
        --tc=linotp.protocol:https
        --tc=linotp.port:443
        --tc=linotp.host:localhost
        --tc=linotp.username:admin
        --tc=linotp.password:admin
        -m smoketest"
    echo "$pytest $(echo "$params" | tr -d '\n')"
    "$pytest" $params
}

upgrade2to3() {
    # Purge, install 3, upgrade to 3
    purge
    logtest "Purge, install linotp 2, upgrade to linotp 3"
    echo "-- LinOTP 2 --"
    preseed_2
    install_2 "$linotp2_deb_url"
    echo "-- LinOTP 3 --"
    preseed_3_for_upgrade
    install_3
    check_3
}

install3() {
    purge
    logtest "Install linotp3 from scratch"
    preseed_3
    install_3
    check_3
}

mysql_password() {
    logtest "Install linotp3 from scratch"
    password="T.e.s.t.#123!"
    purge
    preseed_3
    echo "linotp linotp/mysql/app-pass password ${password}" | $sudo debconf-set-selections
    install_3
    check_3
    # Check mysql login is working
    logtest "Check mysql database access"
    dbc_dbname="$($sudo sh -c ". /etc/dbconfig-common/linotp.conf; echo \$dbc_dbname")"
    echo "select * from Config" | mysql --user=linotp --password="${password}" "$dbc_dbname"
}

install3psql() {
    purge
    logtest "Postgres install"
    preseed_3_postgres
    install_3
    check_3
}

if [ ! -d "$linotpsrc" ]; then
    error "Linotp source directory not found: $linotpsrc"
    exit 1
fi

# Main command processing
if [ "$#" = 0 ]; then
    show_help
elif [ "$1" = "upgrade2to3" -o "$1" = "install3" -o "$1" = "mysql_password" \
    -o "$1" = "install3psql" -o "$1" = "selenium_check" ]; then
    eval $1
elif [ "$1" = "3upgrade" ]; then
    logtest "Upgrading to LinOTP 3"
    preseed_3
    install_3
    check_3
elif [ "$1" = "remove" ]; then
    purge
elif [ "$1" = "install2" ]; then
    purge
    logtest "Install linotp 2"
    preseed_2
    install_2 "$linotp2_deb_url"
    check_2
    selenium_check
elif [ "$1" = "alltests" ]; then
    fresh3
    selenium_check
    upgrade2to3
    selenium_check
    mysql_password
    install3psql
    selenium_check
fi

if [ -n "$have_errors" ]; then
    echo "Errors found"
    exit 1
fi
