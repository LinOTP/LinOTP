# This Dockerfile is used to make the official LinOTP container images
# which we hand out to our clients.

ARG BASE_IMAGE=python:3.11-slim-bookworm
########
# BASE #
########

# 'base' holds dependencies and ENV shared by stages

FROM $BASE_IMAGE AS base

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    LINOTP_HOME=/app \
    VENV_ROOT=/opt/venv \
    TRANSLATIONS_DIR=/translations
ENV PATH=$VENV_ROOT/bin:$PATH

# Install dependencies and clean up
# We add `bookworm-proposed-updates` to get at version `2.5.0-1+deb12u1`
# of `libexpat1`, which fixes CVE-2024-4549[012]. Once Bookworm 12.8 is
# out we can get rid of it again.

RUN echo "deb http://deb.debian.org/debian bookworm-proposed-updates main" >/etc/apt/sources.list.d/proposed-updates.list \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    # required for python-ldap
    libldap2-dev libsasl2-dev \
    # required for pysodium
    libsodium-dev \
    # required for mysql
    default-libmysqlclient-dev pkg-config \
    # custom root-level CA certificate handling
    ca-certificates doas \
    # entrypoint and signal handling
    tini \
    # required to run the HEALTHCHECK command
    curl  \
    # required to make trivy happy
    libexpat1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


###########
# BUILDER #
###########

FROM base AS builder

# Install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    # required for building python-ldap
    gcc \
    # required for translations
    make

WORKDIR $LINOTP_HOME

# Install python dependencies into VENV_ROOT
RUN python -m venv $VENV_ROOT
COPY requirements-prod.txt .
RUN pip install pip==24.0 pip-tools && pip-sync requirements-prod.txt

# Install linotp
COPY MANIFEST.in README.md setup.cfg setup.py ./
COPY linotp linotp

# Build translations:
# json translations are build to `linotp/public/i18n/` and copied via venv
# *.mo translations are copied via TRANSLATIONS_DIR
COPY Makefile.linotp .
RUN pip install pojson && \
    make -f Makefile.linotp compile_catalog && \
    mkdir -p $TRANSLATIONS_DIR && \
    cd $LINOTP_HOME/linotp/i18n/ && \
    find . -type f -name "*.mo" -exec cp --parents {} "$TRANSLATIONS_DIR"/ \;

# Cleanup venv (e.g. remove pojson and its potential deps)
RUN pip-sync requirements-prod.txt

# Install LinOTP into venv
RUN pip install .


#########
# FINAL #
#########

FROM base

HEALTHCHECK --interval=20s --timeout=5s --retries=3 --start-period=60s \
    CMD curl -sfL http://localhost:5000/healthcheck/status || exit 1

# keep LINOTP_ROOT_DIR in a seperate ENV declaration
# as it's used in e.g. LINOTP_DATABASE_URI below
ENV LINOTP_ROOT_DIR=/data
ENV LINOTP_USER=linotp \
    LINOTP_ADMIN_USER=admin \
    LINOTP_ADMIN_PASSWORD= \
    LINOTP_CFG= \
    LINOTP_DATABASE_URI=sqlite:///$LINOTP_ROOT_DIR/linotp.db \
    LINOTP_DB_WAITTIME=5s \
    LINOTP_SESSION_COOKIE_SECURE=true \
    LINOTP_GET_CLIENT_ADDRESS_FROM_POST_DATA=false \
    # disable file logger
    LINOTP_LOG_FILE_DIR=/ \
    LINOTP_LOG_FILE_NAME=/dev/null \
    # root level dirs
    LINOTP_CACHE_DIR=/cache \
    LINOTP_BACKUP_DIR=/backups \
    LINOTP_BABEL_TRANSLATION_DIRECTORIES=/custom-translations;$TRANSLATIONS_DIR \
    LINOTP_CUSTOM_TEMPLATES_DIR=/custom-templates \
    CUSTOM_ASSETS_DIR=/custom-assets \
    # Disable legacy selfservice
    LINOTP_DISABLE_CONTROLLERS="gettoken selfservice" \
    LINOTP_SITE_ROOT_REDIRECT=/manage/ \
    # misc
    DEBIAN_FRONTEND=noninteractive \
    FLASK_APP=linotp.app \
    FLASK_ENV=production \
    REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt

WORKDIR $LINOTP_HOME

# Copy the virtualenv we created in the builder stage
COPY --from=builder $VENV_ROOT $VENV_ROOT
# Copy the translations we created in the builder stage
COPY --from=builder $TRANSLATIONS_DIR $TRANSLATIONS_DIR
# Copy relevant files to start linotp and create symlink
COPY linotpapp.py docker/linotp/entrypoint.sh docker/linotp/symlink_custom_assets.py ./
# Copy certificate installation script
COPY docker/linotp/install-ca-certificates.sh /usr/local/sbin/install-ca-certificates
# Copy configuration file for `doas`
COPY docker/linotp/doas.conf /etc/doas.conf

# Create directories
RUN mkdir -p \
    $LINOTP_ROOT_DIR \
    $LINOTP_CACHE_DIR \
    $LINOTP_BACKUP_DIR \
    $LINOTP_CUSTOM_TEMPLATES_DIR \
    $TRANSLATIONS_DIR \
    && \
    # set doas permissions (mainly for GitLab ci)
    chmod 644 /etc/doas.conf && \
    # Create symlink for assets customization
    python symlink_custom_assets.py && rm symlink_custom_assets.py \
    # Let people put custom CA certificates into a top-level directory
    && ln -s /usr/local/share/ca-certificates /ca-certificates

# Create and set the user to run the container and chown directories
RUN useradd -r $LINOTP_USER && \
    chown -R $LINOTP_USER:$LINOTP_USER \
    $LINOTP_ROOT_DIR \
    $LINOTP_CACHE_DIR \
    $LINOTP_BACKUP_DIR
USER $LINOTP_USER

# Create volumes for root level dirs
VOLUME $LINOTP_ROOT_DIR \
    $LINOTP_CACHE_DIR 

EXPOSE 5000

ENTRYPOINT [ "tini", "--", "./entrypoint.sh" ] 
